{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/components/chat-area/chat-area.component.html","webpack:///./src/app/components/chat-area/chat-area.component.ts","webpack:///./src/app/components/chat-list/chat-list.component.html","webpack:///./src/app/components/chat-list/chat-list.component.ts","webpack:///./src/app/components/login/login.component.html","webpack:///./src/app/components/login/login.component.ts","webpack:///./src/app/components/message-area/message-area.component.html","webpack:///./src/app/components/message-area/message-area.component.ts","webpack:///./src/app/components/people-list/people-list.component.html","webpack:///./src/app/components/people-list/people-list.component.ts","webpack:///./src/app/layout/header/header.component.html","webpack:///./src/app/layout/header/header.component.ts","webpack:///./src/app/layout/main/main.component.html","webpack:///./src/app/layout/main/main.component.ts","webpack:///./src/app/layout/sidebar/sidebar.component.html","webpack:///./src/app/layout/sidebar/sidebar.component.ts","webpack:///./src/app/materialUI.module.ts","webpack:///./src/app/shared-services/api.service.ts","webpack:///./src/app/shared-services/chat.service.ts","webpack:///./src/app/shared-services/socket.service.ts","webpack:///./src/app/shared-services/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts","webpack:///ws (ignored)"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { Login } from './components/login/login.component';\nimport { Main } from './layout/main/main.component';\n\nconst routes: Routes = [\n  { path: '', component: Login },\n  { path: 'chat', component: Main }\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<router-outlet></router-outlet>\\n\"","import { Component} from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { APIService } from './shared-services/api.service';\nimport { PeopleList } from './components/people-list/people-list.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MaterialUIModule } from './materialUI.module';\nimport { ChatService } from './shared-services/chat.service';\nimport { FormsModule } from '@angular/forms';\nimport { ChatList } from './components/chat-list/chat-list.component';\nimport { Sidebar } from './layout/sidebar/sidebar.component';\nimport { UserService } from './shared-services/user.service';\nimport { ChatArea } from './components/chat-area/chat-area.component';\nimport {MatSidenavModule} from '@angular/material/sidenav';\nimport { MessageArea } from './components/message-area/message-area.component';\nimport { SocketService } from './shared-services/socket.service';\nimport { Login } from './components/login/login.component';\nimport { Main } from './layout/main/main.component';\nimport { Header } from './layout/header/header.component';\n\n@NgModule({\n  declarations:\n    [\n      PeopleList,\n      ChatList,\n      Sidebar,\n      ChatArea,\n      MessageArea,\n      Login,\n      Header,\n      Main,\n      AppComponent\n    ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    BrowserAnimationsModule,\n    MaterialUIModule,\n    MatSidenavModule,\n    FormsModule\n  ],\n  providers: [APIService, ChatService,UserService,SocketService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","module.exports = \"<div class=\\\"\\\" *ngIf=\\\"!loading\\\" style=\\\"height:90%;overflow-y:scroll;\\\">\\n    <mat-toolbar color=\\\"primary\\\" style=\\\"position: absolute;z-index: 1000;\\\">\\n        <mat-toolbar-row>\\n            <img style=\\\" border-radius: 50%;height:50px;width:50px;\\\"\\n                src=\\\"{{ partner.picture ?  partner.picture : '/assets/img/common/useravatar.png'}}\\\">\\n            <div style=\\\"display: flex;flex-direction: column;margin-left:10px;\\\">\\n                <span class=\\\"capitalize\\\" style=\\\"height:20px;\\\">{{partner.name}}</span>\\n                <small style=\\\"height:20px;\\\">online</small>\\n            </div>\\n        </mat-toolbar-row>\\n    </mat-toolbar>\\n    <div style=\\\"margin-top:80px;\\\">\\n        <div *ngFor=\\\"let message of messages\\\">\\n            <div style=\\\"display: flex;\\\" [style.flex-direction]=\\\"!isMessageMine(message) ? 'row' : 'row-reverse' \\\">\\n                <div class=\\\"talk-bubble tri-right\\\" [ngClass]=\\\"{ \\n                'talk-bubble-partner left-top': !isMessageMine(message),\\n                'talk-bubble-me btm-right': isMessageMine(message)}\\\">\\n                    <div class=\\\"talktext\\\">\\n                        <p> {{message.message}}</p>\\n                        <div style=\\\"text-align: right;\\\">\\n                            <small> {{formatDate(message.createdAt)}}</small>&nbsp;\\n                            <small *ngIf=\\\"message.readBy.length == 0\\\">&#x2714;</small>\\n                            <small *ngIf=\\\"message.readBy.length > 0\\\">&#x2714;&#x2714;</small>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, OnChanges, ViewChild, ElementRef, AfterViewChecked } from '@angular/core';\nimport { APIService } from 'src/app/shared-services/api.service';\nimport { ChatService } from 'src/app/shared-services/chat.service';\nimport { UserService } from 'src/app/shared-services/user.service';\nimport { MessageBundle } from '@angular/compiler';\n\n@Component({\n    selector: 'app-chat-area',\n    templateUrl: './chat-area.component.html'\n})\nexport class ChatArea implements OnInit,AfterViewChecked{\n    partner\n    loading = true;\n    messages = [];\n    me\n    @ViewChild('container') container: ElementRef;\n\n    constructor(private api: APIService, private chatService: ChatService, private userService: UserService) {\n    }\n    public ngOnInit() {\n        this.me = this.userService.me\n        this.chatService.currentChat.subscribe((chat) => {\n            this.loading = true;\n            if (chat) {\n                this.partner = chat.members.find((member) => member._id != this.me._id)\n                this.chatService.messagesOfCurrentChat.subscribe((messages)=>{\n                    this.messages =  messages;\n                    console.log(\"chat area called\",messages)\n                    this.loading = false;\n                })\n            }\n        })\n    }\n\n    ngAfterViewChecked(){\n        try {\n          this.container.nativeElement.scrollIntoView();\n          }catch(err){}\n      }\n\n    isMessageMine(message){\n        return message.sender == this.me._id\n    }\n    formatDate(date){\n        return new Date(date).toLocaleTimeString()\n    }\n}\n","module.exports = \"<mat-nav-list *ngIf=\\\"chats && chats.length>0\\\">\\n    <mat-list-item *ngFor=\\\"let chat of chats\\\" (click)=\\\"onChatListItemClick(chat)\\\">\\n        <img matListAvatar\\n            src=\\\"{{ chat.partner.picture ?  chat.partner.picture : '/assets/img/common/useravatar.png'}}\\\">\\n        <h3 matLine> {{ chat.partner.name}} </h3>\\n        <p matLine>\\n            <span>Online</span>\\n        </p>\\n    </mat-list-item>\\n</mat-nav-list>\\n\\n\\n<div *ngIf=\\\"chats && chats.length==0\\\">\\n    No chats yet. You can start new chat with users from 'People' tab.\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { APIService } from 'src/app/shared-services/api.service';\nimport { User } from '../user.model';\nimport { UserService } from 'src/app/shared-services/user.service';\nimport { ChatService } from 'src/app/shared-services/chat.service';\n\n@Component({\n    selector: 'app-chat-list',\n    templateUrl: './chat-list.component.html'\n})\nexport class ChatList implements OnInit {\n    public chats: Array<User>;\n    constructor(private api: APIService,private userService : UserService,private chatService : ChatService) {\n    }\n    public ngOnInit() {\n        let me = this.userService.me;\n        this.chatService.chats.subscribe((chats)=>{\n            this.chats = chats.map((chat)=>{\n                let partner = chat.members.find((member) => member._id !== me._id)\n                return {...chat,partner}\n            })\n            console.log(this.chats)\n        })\n    }\n    public onChatListItemClick(chat) {\n        console.log(chat);\n        this.chatService.setChat(chat);\n    }\n}\n","module.exports = \"<style>\\n    .loginContainer {\\n        display: flex;\\n        align-items: center;\\n        justify-content: center;\\n        flex-direction: column;\\n        margin-top:20%;\\n    }\\n    h1{\\n        text-align: center;\\n        font-size: 40px;\\n    }\\n</style>\\n<div class=\\\"loginContainer\\\">\\n    <mat-card>\\n        <h1>G Chat</h1>\\n        <a mat-raised-button color=\\\"primary\\\" href=\\\"http://localhost:3010/auth/google\\\">Sign up / Sign in using Google</a>\\n    </mat-card>\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { APIService } from 'src/app/shared-services/api.service';\n\n@Component({\n    selector: 'app-login',\n    templateUrl: './login.component.html'\n})\nexport class Login implements OnInit {\n    loading = true;\n    constructor(private api: APIService) {\n    }\n    public ngOnInit() {\n    }\n    sendMessage() {\n    }\n}\n","module.exports = \"<div style=\\\"width:100%;height:100%;display: flex;align-items: center;\\\" *ngIf=\\\"chat\\\">\\n    <textarea matInput [(ngModel)]=\\\"message\\\" style=\\\"width:90%;height:90%;\\\"></textarea>\\n    <div style=\\\"padding-left:15px\\\">\\n        <button mat-fab color=\\\"primary\\\" (click)=\\\"sendMessage()\\\">Send</button>\\n    </div>\\n\\n</div>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { APIService } from 'src/app/shared-services/api.service';\nimport { ChatService } from 'src/app/shared-services/chat.service';\nimport { UserService } from 'src/app/shared-services/user.service';\n\n@Component({\n    selector: 'app-message-area',\n    templateUrl: './message-area.component.html'\n})\nexport class MessageArea implements OnInit {\n    loading = true;\n    message = \"\";\n    chat\n    constructor(private api: APIService, private chatService: ChatService, private userService: UserService) {\n    }\n    public ngOnInit() {\n        this.chatService.currentChat.subscribe((chat) => {\n            this.chat = chat;\n        })\n    }\n    sendMessage() {\n        this.chatService.currentChat.subscribe((chat) => {\n            this.api.sendMessage(this.message, chat._id).subscribe((response) => {\n                this.message = \"\"\n            })\n        })\n    }\n}\n","module.exports = \"\\n<mat-nav-list *ngIf=\\\"people && people.length>0\\\">\\n    <mat-list-item *ngFor=\\\"let user of people\\\" (click)=\\\"onPeopleListItemClick(user)\\\">\\n        <img matListAvatar src=\\\"{{ user.picture ? user.picture : '/assets/img/common/useravatar.png'}}\\\">\\n        <h3 matLine> {{user.name}} </h3>\\n        <p matLine>\\n            <span>Online</span>\\n        </p>\\n    </mat-list-item>\\n</mat-nav-list>\\n\\n<div *ngIf=\\\"people && people.length==0\\\">\\n    No people yet.\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { APIService } from 'src/app/shared-services/api.service';\nimport { User } from '../user.model';\nimport { ChatService } from 'src/app/shared-services/chat.service';\nimport { UserService } from 'src/app/shared-services/user.service';\nimport { ThrowStmt } from '@angular/compiler';\n\n@Component({\n    selector: 'app-people-list',\n    templateUrl: './people-list.component.html'\n})\nexport class PeopleList implements OnInit {\n    public people: Array<User>;\n    constructor(private api: APIService, private chatService: ChatService,private userService : UserService) {\n    }\n    public  ngOnInit() {\n        let me = this.userService.me\n       this.chatService.people.subscribe((people)=>{\n           this.people = people;\n       })\n    }\n\n    public onPeopleListItemClick(user) {\n        this.api.getChat(user._id).subscribe((response) => {\n            let chat = response.data;\n            this.chatService.setChat(chat);\n        })\n    }\n}\n","module.exports = \"<style>\\n.spacer {\\n    flex: 1 1 auto;\\n  }\\n</style>\\n<mat-toolbar color=\\\"primary\\\">\\n  <mat-toolbar-row>\\n    <span>G Chat</span>\\n    <span class=\\\"spacer\\\"></span>\\n    <button mat-button  (click)=\\\"logout()\\\">Logout</button>\\n  </mat-toolbar-row>\\n</mat-toolbar><br>\"","import { Component, OnInit } from '@angular/core';\n\nimport { Router } from '@angular/router';\n\nimport { APIService } from 'src/app/shared-services/api.service';\n\n@Component({\n    selector: 'app-header',\n    templateUrl: './header.component.html'\n})\nexport class Header implements OnInit {\n  constructor(private api : APIService,private router : Router){\n  }\n  ngOnInit(){\n  }\n  logout(){\n      this.api.logout().subscribe((data)=>{\n        this.router.navigateByUrl('/');\n      },(e)=>{\n        this.router.navigateByUrl('/');\n      })\n  }\n}\n","module.exports = \"<style>\\n        .container {\\n          width: 1200px;\\n          height: 800px;\\n          border: 1px solid #a3a3a3;\\n          margin: auto;\\n        \\n        }\\n      </style>\\n<div *ngIf=\\\"!loading\\\">\\n    <app-header></app-header>\\n    <mat-drawer-container class=\\\"container\\\">\\n        <mat-drawer mode=\\\"side\\\" opened>\\n            <app-sidebar> </app-sidebar>\\n        </mat-drawer>\\n        <mat-drawer-content>\\n            <div style=\\\"height:100%;\\\">\\n                <app-chat-area></app-chat-area>\\n            </div>\\n            <div style=\\\"height:10%;position: absolute;bottom: 0;right:0;left:0;\\\">\\n                <app-message-area></app-message-area>\\n            </div>\\n        </mat-drawer-content>\\n    </mat-drawer-container>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ChatService } from 'src/app/shared-services/chat.service';\nimport { UserService } from 'src/app/shared-services/user.service';\nimport { SocketService } from 'src/app/shared-services/socket.service';\n\n@Component({\n    selector: 'app-main',\n    templateUrl: './main.component.html'\n})\nexport class Main implements OnInit {\n  loading = true;\n  constructor(private chatService : ChatService,private userService : UserService,private socketService : SocketService){\n  }\n  async ngOnInit(){\n    await this.userService.getMe()\n    this.socketService.initSocket();\n    await this.chatService.init()\n    this.loading = false;\n  }\n\n}\n","module.exports = \"<div >\\n    <mat-tab-group>\\n        <mat-tab label=\\\"Chats\\\">\\n            <app-chat-list></app-chat-list>\\n        </mat-tab>\\n        <mat-tab label=\\\"People\\\">\\n            <app-people-list></app-people-list>\\n        </mat-tab>\\n    </mat-tab-group>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'app-sidebar',\n    templateUrl: './sidebar.component.html'\n})\nexport class Sidebar implements OnInit {\n    constructor() {\n    }\n    public ngOnInit() {\n    }\n    public onChatListItemClick(user) {\n    }\n}\n","import {MatButtonModule, MatCheckboxModule} from '@angular/material';\nimport { NgModule } from '@angular/core';\nimport {MatTabsModule} from '@angular/material/tabs';\nimport {MatListModule} from '@angular/material/list';\nimport {MatToolbarModule} from '@angular/material/toolbar';\nimport {MatInputModule} from '@angular/material/input';\nimport {MatCardModule} from '@angular/material/card';\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\n\n\n\n\n\n@NgModule({\n  imports: [MatButtonModule, MatCheckboxModule, MatTabsModule, MatListModule,MatToolbarModule,MatInputModule,MatCardModule,MatSnackBarModule],\n  exports: [MatButtonModule, MatCheckboxModule, MatTabsModule, MatListModule,MatToolbarModule,MatInputModule,MatCardModule,MatSnackBarModule]\n})\nexport class MaterialUIModule { }","import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nimport { environment } from \"../../environments/environment\"\n\n\n\n@Injectable()\nexport class APIService {\n    private headers: HttpHeaders;\n    private httpArgs: any;\n    private baseUrl;\n    constructor(private http: HttpClient) {\n        this.baseUrl = environment.apiUrl;\n        this.headers = new HttpHeaders();\n        this.headers.append('Content-Type', 'application/json');\n        this.httpArgs = {\n            headers: this.headers,\n            withCredentials: true\n        };\n    }\n\n    get(path) {\n        return this.http.get(this.baseUrl + path, this.httpArgs).pipe(catchError(this.handleError))\n    }\n    post(path, body) {\n        return this.http.post(this.baseUrl + path, body, this.httpArgs).pipe(catchError(this.handleError))\n    }\n    put(path, body) {\n        return this.http.put(this.baseUrl + path, body, this.httpArgs).pipe(catchError(this.handleError))\n    }\n\n    getMe = (): Observable<any> => {\n        return this.get(\"/user/me\")\n    };\n\n    getAllUsers = (): Observable<any> => {\n        return this.get(\"/users\")\n    };\n\n    getChat = (partnerId): Observable<any> => {\n        return this.post(\"/chat\", { partnerId })\n    };\n\n    getMyChats = (): Observable<any> => {\n        return this.get(\"/chats\")\n    };\n\n    getMessagesOfChat = (chatId): Observable<any> => {\n        return this.post(\"/message\", { chatId })\n    };\n\n    sendMessage = (message, chatId): Observable<any> => {\n        return this.post(\"/message/send\", { message, chatId });\n    };\n    \n    seenMessage = (messageId): Observable<any> => {\n        return this.put(\"/message/seen\", { messageId });\n    };\n\n    logout = () : Observable<any> => {\n        return this.get(\"/logout\")\n    }\n\n    /* Common Error Handling for all Api Calls*/\n    private handleError = (error) => {\n        console.log(error)\n        return throwError(error)\n    }\n}","import { Injectable } from '@angular/core';\nimport { APIService } from './api.service';\nimport { BehaviorSubject } from 'rxjs';\nimport { UserService } from './user.service';\nimport { SocketService } from './socket.service';\nimport {MatSnackBar} from '@angular/material';\n\n\n@Injectable()\nexport class ChatService {\n    public currentChat = new BehaviorSubject<any>(null);\n    public messagesOfCurrentChat = new BehaviorSubject<Array<any>>([]);\n    public people = new BehaviorSubject<Array<any>>([]);\n    public chats = new BehaviorSubject<Array<any>>([]);\n    private me;\n\n    constructor(private api: APIService, private userService: UserService, private socketService: SocketService,private snackBar: MatSnackBar) {\n        this.me = userService.me;\n        this.initListenForMessage()\n        this.initListenForChat()\n        this.initListenForPeople()\n        this.initListenForMessageUpdate()\n    }\n    setChat(chat) {\n        this.currentChat.next(chat)\n        this.api.getMessagesOfChat(chat._id).subscribe((response) => {\n            console.log(response)\n            this.messagesOfCurrentChat.next(response.data);\n        })\n    }\n\n    initListenForMessage() {\n        this.socketService.incomingMessage.subscribe((message) => {\n            let currentChat = this.currentChat.getValue();\n            if (!currentChat){\n                if(message)\n                this.showAlert(\"You got a new message\"+message)\n                return\n            }\n            if (currentChat._id == message.chat) {\n                this.messagesOfCurrentChat.next([...this.messagesOfCurrentChat.getValue(), message])\n\n                if (message.sender != this.userService.me._id) {\n                    this.api.seenMessage(message._id).subscribe((response) => {\n\n                    })\n                }\n            }\n        })\n    }\n    initListenForMessageUpdate() {\n        this.socketService.updateMessage.subscribe((message) => {\n            let currentChat = this.currentChat.getValue();\n            if (!currentChat)\n                return\n            if (currentChat._id == message.chat) {\n                let msgs = [...this.messagesOfCurrentChat.getValue()]\n                let msgIdx = msgs.findIndex((m) => m._id == message._id)\n                msgs[msgIdx] = JSON.parse(JSON.stringify(message));\n                this.messagesOfCurrentChat.next([...msgs])\n            }\n        })\n    }\n    initListenForChat() {\n        this.socketService.incomingChat.subscribe((chat) => {\n            this.showAlert(\"You got a new chat request. Check chats tab\")\n            this.chats.next([...this.chats.getValue(), chat])\n        })\n    }\n\n    initListenForPeople() {\n        this.socketService.incomingPeople.subscribe((user) => {\n           \n            let peopleStored = this.people.getValue();\n            let userExists = peopleStored.find((p) => p._id == user._id)\n            if (!userExists){\n                this.people.next([...this.people.getValue(), user])\n                this.showAlert(\"New User Joined G Chat. \")\n            }\n        })\n    }\n\n    async init() {\n        let peopleResponse: any = await this.api.getAllUsers().toPromise()\n        this.people.next(this.filterMeFromPeople(peopleResponse.data))\n\n        let chatResponse: any = await this.api.getMyChats().toPromise()\n        this.chats.next(chatResponse.data.chats)\n    }\n\n    filterMeFromPeople(people) {\n        return people.filter((user) => user._id != this.userService.me._id)\n    }\n\n    showAlert(message){\n        this.snackBar.open(message, \"OK\", {\n            duration: 2000,\n          });\n    }\n}","import { Injectable } from '@angular/core';\n\nimport * as io from 'socket.io-client';\nimport { UserService } from './user.service';\nimport { Observable, BehaviorSubject } from 'rxjs';\nimport { environment } from 'src/environments/environment';\n\n\n\n    @Injectable()\n    export class SocketService {\n        private socket;\n        private baseSockerUrl;\n        public incomingMessage = new BehaviorSubject<any>(null);\n        public incomingChat = new BehaviorSubject<any>(null);\n        public incomingPeople = new BehaviorSubject<any>(null);\n        public updateMessage = new BehaviorSubject<any>(null);\n        constructor(private userService : UserService){\n            this.baseSockerUrl= environment.socketUrl;\n        }\n\n        public  initSocket() {\n            this.socket =  io.connect(this.baseSockerUrl, { query : \"userId=\"+this.userService.me._id });\n            this.initOnMessage()\n            this.initOnChat()\n            this.initOnPeople()\n        }\n\n        public send(message: any): void {\n            this.socket.emit('message', message);\n        }\n\n        public initOnMessage(){\n            this.socket.on('message', (data: any) =>{\n                this.incomingMessage.next(data);\n            });\n            this.socket.on('messageupdate', (data: any) =>{\n                this.updateMessage.next(data);\n            });\n        }\n\n        public initOnChat(){\n            this.socket.on('chat', (data: any) =>{\n                this.incomingChat.next(data);\n            });\n        }\n\n        public initOnPeople(){\n            this.socket.on('people', (data: any) =>{\n                this.incomingPeople.next(data);\n            });\n        }\n    }\n","import { Injectable } from '@angular/core';\nimport { APIService } from './api.service';\n\n@Injectable()\nexport class UserService {\n    public me : any;\n    constructor(private api : APIService) {\n    }\n    async getMe(){\n        try{  \n         let response  = await this.api.getMe().toPromise();\n         this.me = response.data;\n        }\n        catch(error){\n            console.log(\"Unable to fetch your details.\")\n        }\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production  : false,\n  apiUrl      : \"http://localhost:3010\",\n  socketUrl   : \"http://localhost:3020\"\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","/* (ignored) */"],"sourceRoot":""}